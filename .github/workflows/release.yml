name: Release Pipeline

on:
  release:
    types: [published]

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}

    - name: Get release tag
      id: release
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push Gateway image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deployments/docker/gateway.Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/gateway:${{ steps.release.outputs.tag }}
          ghcr.io/${{ github.repository }}/gateway:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Auth Service image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deployments/docker/auth.Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/auth:${{ steps.release.outputs.tag }}
          ghcr.io/${{ github.repository }}/auth:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Worker Registry image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deployments/docker/registry.Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/registry:${{ steps.release.outputs.tag }}
          ghcr.io/${{ github.repository }}/registry:latest
        labels: ${{ steps.meta.outputs.labels }}

  create-changelog:
    name: Create Changelog
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get release tag
      id: release
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      run: |
        git log $(git describe --tags --abbrev=0 ${{ steps.release.outputs.tag }}^)...${{ steps.release.outputs.tag }} --pretty=format:'- %s' > CHANGELOG.md

    - name: Upload changelog
      uses: actions/upload-artifact@v3
      with:
        name: changelog
        path: CHANGELOG.md