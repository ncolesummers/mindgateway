name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Install golangci-lint
      run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2

    - name: Lint
      run: golangci-lint run

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Unit tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Install gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Run gosec
      run: gosec -no-fail -fmt=sarif -out=gosec.sarif ./...

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: gosec.sarif

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build Gateway
      run: go build -v ./cmd/gateway

    - name: Build Auth Service
      run: go build -v ./cmd/auth-service

    - name: Build Worker Registry
      run: go build -v ./cmd/worker-registry

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}

    - name: Build and push Gateway image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deployments/docker/gateway.Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/gateway:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Auth Service image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deployments/docker/auth.Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/auth:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Worker Registry image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deployments/docker/registry.Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/registry:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}